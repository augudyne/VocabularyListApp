* Vocabulary List (Android
** Setup
*** Enable AndroidX in gradle.properties
    #+BEGIN_SRC
android.useAndroidX=true
android.enableJetifier=true 
    #+END_SRC
*** Enable AndroidX lifecycles
    #+BEGIN_SRC
// ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha01'
    kapt "android.arch.lifecycle:compiler:1.1.1"
    #+END_SRC
*** Add RxJava in build.gradle of app
    #+BEGIN_SRC 
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    #+END_SRC
*** Add Retrofit
    ~implementation 'com.squareup.retrofit2:converter-gson:2.1.0'~
*** Setup Dagger2
    1. Add dependencies 
    #+BEGIN_SRC 
    // dagger
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"

    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    #+END_SRC
    2. Create an application to inject into Activities and Fragments
       Create a class that extends Application and implements HasActivityInjector and HasSupportFragmentInjector. Implement by injecting DispatchingAndroidInjector. In onCreate, build and inject app component
    3. Create AppComponent that will inject into the application. Create @Component.Builder interface. (See VocabularyAppComponent)
    4. Create FragmentModule and Activity module that contributes android injectors
    5. Create other modules e.g. for Retrofit with the builder
       
